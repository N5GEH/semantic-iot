
@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudtqk: <http://qudt.org/vocab/quantitykind/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rec: <https://w3id.org/rec#> .
@prefix ref: <https://brickschema.org/schema/Brick/ref#> .
@prefix s223: <http://data.ashrae.org/standard223#> .
@prefix sdo: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix tag: <https://brickschema.org/schema/BrickTag#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ex: <http://example.com#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .

# Mapping for Hotel
ex:MappingHotel
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="Hotel")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/Hotel/{id}" ;
        rr:class rec:Shelter ;
    ] .

# Mapping for HotelRoom
ex:MappingHotelRoom
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="HotelRoom")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/HotelRoom/{id}" ;
        rr:class rec:Room ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotel ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] .

# Mapping for AmbientTemperatureSensor
ex:MappingAmbientTemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="AmbientTemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/AmbientTemperatureSensor/{id}" ;
        rr:class brick:Temperature_Sensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotel ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperatureAmb/value" ;
        ] ;
    ] .

# Mapping for TemperatureSensor
ex:MappingTemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="TemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/TemperatureSensor/{id}" ;
        rr:class brick:Temperature_Sensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperature/value" ;
        ] ;
    ] .

# Mapping for CO2Sensor
ex:MappingCO2Sensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="CO2Sensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/CO2Sensor/{id}" ;
        rr:class brick:CO2_Sensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/co2/value" ;
        ] ;
    ] .

# Mapping for PresenceSensor
ex:MappingPresenceSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="PresenceSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/PresenceSensor/{id}" ;
        rr:class brick:Occupancy_Sensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/pir/value" ;
        ] ;
    ] .

# Mapping for FreshAirVentilation
ex:MappingFreshAirVentilation
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="FreshAirVentilation")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/FreshAirVentilation/{id}" ;
        rr:class brick:Ventilation_Air_System ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] .

# Mapping for RadiatorThermostat
ex:MappingRadiatorThermostat
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="RadiatorThermostat")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/RadiatorThermostat/{id}" ;
        rr:class brick:Radiator ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] .

# Mapping for CoolingCoil
ex:MappingCoolingCoil
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="CoolingCoil")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/CoolingCoil/{id}" ;
        rr:class brick:Cooling_Coil ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] .

# Mapping for airFlowSetpoint (Extra Node)
ex:MappingAirFlowSetpoint
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="FreshAirVentilation")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/AirFlowSetpoint/{id}" ;
        rr:class brick:Air_Flow_Setpoint ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:isPointOf ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingFreshAirVentilation ;
            rr:joinCondition [
                rr:child "id" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/airFlowSetpoint/value" ;
        ] ;
    ] .

# Mapping for temperatureSetpoint (Extra Node)
ex:MappingTemperatureSetpoint
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="RadiatorThermostat")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/TemperatureSetpoint/{id}" ;
        rr:class brick:Temperature_Setpoint ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:isPointOf ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingRadiatorThermostat ;
            rr:joinCondition [
                rr:child "id" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperatureSetpoint/value" ;
        ] ;
    ] .

# Mapping for fanSpeed (Extra Node)
ex:MappingFanSpeed
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="CoolingCoil")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/FanSpeed/{id}" ;
        rr:class brick:Fan_Speed_Command ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate brick:isPointOf ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingCoolingCoil ;
            rr:joinCondition [
                rr:child "id" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/fanSpeed/value" ;
        ] ;
    ] .
