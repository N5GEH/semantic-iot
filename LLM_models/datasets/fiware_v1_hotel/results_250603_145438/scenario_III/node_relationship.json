{
    "@context": {
        "brick": "https://brickschema.org/schema/Brick#",
        "csvw": "http://www.w3.org/ns/csvw#",
        "dc": "http://purl.org/dc/elements/1.1/",
        "dcat": "http://www.w3.org/ns/dcat#",
        "dcmitype": "http://purl.org/dc/dcmitype/",
        "dcterms": "http://purl.org/dc/terms/",
        "dcam": "http://purl.org/dc/dcam/",
        "doap": "http://usefulinc.com/ns/doap#",
        "foaf": "http://xmlns.com/foaf/0.1/",
        "geo": "http://www.opengis.net/ont/geosparql#",
        "odrl": "http://www.w3.org/ns/odrl/2/",
        "org": "http://www.w3.org/ns/org#",
        "prof": "http://www.w3.org/ns/dx/prof/",
        "prov": "http://www.w3.org/ns/prov#",
        "qb": "http://purl.org/linked-data/cube#",
        "schema": "https://schema.org/",
        "sh": "http://www.w3.org/ns/shacl#",
        "skos": "http://www.w3.org/2004/02/skos/core#",
        "sosa": "http://www.w3.org/ns/sosa/",
        "ssn": "http://www.w3.org/ns/ssn/",
        "time": "http://www.w3.org/2006/time#",
        "vann": "http://purl.org/vocab/vann/",
        "void": "http://rdfs.org/ns/void#",
        "wgs": "https://www.w3.org/2003/01/geo/wgs84_pos#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "xsd": "http://www.w3.org/2001/XMLSchema#",
        "xml": "http://www.w3.org/XML/1998/namespace",
        "bacnet": "http://data.ashrae.org/bacnet/2020#",
        "bsh": "https://brickschema.org/schema/BrickShape#",
        "qudt": "http://qudt.org/schema/qudt/",
        "qudtqk": "http://qudt.org/vocab/quantitykind/",
        "rec": "https://w3id.org/rec#",
        "ref": "https://brickschema.org/schema/Brick/ref#",
        "s223": "http://data.ashrae.org/standard223#",
        "sdo": "http://schema.org/",
        "tag": "https://brickschema.org/schema/BrickTag#",
        "unit": "http://qudt.org/vocab/unit/",
        "vcard": "http://www.w3.org/2006/vcard/ns#"
    },
    "@data": [
        {
            "nodetype": "Hotel",
            "iterator": "$[?(@.type=='Hotel')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Hot_Deck', 'brick:Shower', 'brick:Tunnel']",
            "hasRelationship": [],
            "hasDataAccess": null
        },
        {
            "nodetype": "AmbientTemperatureSensor",
            "iterator": "$[?(@.type=='AmbientTemperatureSensor')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Air_Temperature_Sensor', 'brick:Temperature_Sensor', 'brick:Water_Temperature_Sensor']",
            "hasRelationship": [
                {
                    "relatedNodeType": "Hotel",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "HotelRoom",
            "iterator": "$[?(@.type=='HotelRoom')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Control_Room', 'brick:Team_Room', 'brick:Telecom_Room']",
            "hasRelationship": [],
            "hasDataAccess": null
        },
        {
            "nodetype": "TemperatureSensor",
            "iterator": "$[?(@.type=='TemperatureSensor')]",
            "class": "**TODO: PLEASE CHECK** brick:Temperature_Sensor",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "CO2Sensor",
            "iterator": "$[?(@.type=='CO2Sensor')]",
            "class": "**TODO: PLEASE CHECK** brick:CO2_Sensor",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "PresenceSensor",
            "iterator": "$[?(@.type=='PresenceSensor')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Pressure_Sensor', 'brick:Frequency_Sensor', 'brick:Speed_Sensor']",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "FreshAirVentilation",
            "iterator": "$[?(@.type=='FreshAirVentilation')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Fresh_Air_Fan', 'brick:Fresh_Air_Setpoint_Limit', 'brick:Max_Fresh_Air_Setpoint_Limit']",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                },
                {
                    "relatedNodeType": "airFlowSetpoint_FreshAirVentilation",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "RadiatorThermostat",
            "iterator": "$[?(@.type=='RadiatorThermostat')]",
            "class": "**TODO: PLEASE CHECK** brick:Thermostat",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                },
                {
                    "relatedNodeType": "temperatureSetpoint_RadiatorThermostat",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "CoolingCoil",
            "iterator": "$[?(@.type=='CoolingCoil')]",
            "class": "**TODO: PLEASE CHECK** brick:Cooling_Coil",
            "hasRelationship": [
                {
                    "relatedNodeType": "HotelRoom",
                    "propertyClass": "**TODO: PLEASE CHECK** brick:hasLocation",
                    "rawdataidentifier": "hasLocation.value"
                },
                {
                    "relatedNodeType": "fanSpeed_CoolingCoil",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "fanSpeed_CoolingCoil",
            "iterator": "$[?(@.type=='fanSpeed_CoolingCoil')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Cooling_Coil', 'brick:Fan_Speed_Command', 'brick:Direct_Expansion_Cooling_Coil']",
            "hasRelationship": [
                {
                    "relatedNodeType": "CoolingCoil",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "airFlowSetpoint_FreshAirVentilation",
            "iterator": "$[?(@.type=='airFlowSetpoint_FreshAirVentilation')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Air_Flow_Setpoint_Limit', 'brick:Max_Air_Flow_Setpoint_Limit', 'brick:Min_Air_Flow_Setpoint_Limit']",
            "hasRelationship": [
                {
                    "relatedNodeType": "FreshAirVentilation",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        },
        {
            "nodetype": "temperatureSetpoint_RadiatorThermostat",
            "iterator": "$[?(@.type=='temperatureSetpoint_RadiatorThermostat')]",
            "class": "**TODO: PLEASE CHECK** ['brick:Air_Temperature_Setpoint_Limit', 'brick:Max_Temperature_Setpoint_Limit', 'brick:Min_Temperature_Setpoint_Limit']",
            "hasRelationship": [
                {
                    "relatedNodeType": "RadiatorThermostat",
                    "propertyClass": "**TODO: PLEASE CHECK** rec:relatedTo",
                    "rawdataidentifier": "relatedTo.value"
                }
            ],
            "hasDataAccess": null
        }
    ]
}