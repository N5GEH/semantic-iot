@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ex: <http://example.com/> .
@prefix brick: <https://brickschema.org/schema/1.1/Brick#> .
@prefix rec: <https://w3id.org/rec#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# Define namespaces for mapping
@prefix map: <http://example.com/mapping/> .

# Hotel mapping
map:HotelMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='Hotel')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Location
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rml:reference "name.value" ]
    ].

# HotelRoom mapping
map:HotelRoomMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='HotelRoom')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class rec:Bedroom
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rml:reference "name.value" ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ].

# Temperature Sensor mapping
map:TemperatureSensorMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='TemperatureSensor')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Temperature_Sensor
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperature/value";
        ]
    ].

# CO2 Sensor mapping
map:CO2SensorMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='CO2Sensor')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:CO2_Sensor
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/co2/value";
        ]
    ].

# Presence Sensor mapping
map:PresenceSensorMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='PresenceSensor')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Occupancy_Sensor
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/pir/value";
        ]
    ].

# Fresh Air Ventilation mapping
map:FreshAirVentilationMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='FreshAirVentilation')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Ventilation_Air_System
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/airFlowSetpoint/value";
        ]
    ].

# Radiator Thermostat mapping
map:RadiatorThermostatMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='RadiatorThermostat')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Radiator
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperatureSetpoint/value";
        ]
    ].

# Cooling Coil mapping
map:CoolingCoilMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='CoolingCoil')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Cooling_Coil
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelRoomMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/fanSpeed/value";
        ]
    ].

# Ambient Temperature Sensor mapping
map:AmbientTemperatureSensorMapping
    a rr:TriplesMap;
    rml:logicalSource [
        rml:source "placeholder.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$[?(@.type=='AmbientTemperatureSensor')]"
    ];
    
    rr:subjectMap [
        rr:template "http://example.com/{id}";
        rr:class brick:Outside_Air_Temperature_Sensor
    ];
    
    rr:predicateObjectMap [
        rr:predicate brick:hasLocation;
        rr:objectMap [
            rr:parentTriplesMap map:HotelMapping;
            rr:joinCondition [
                rr:child "hasLocation.value";
                rr:parent "id"
            ]
        ]
    ];
    
    rr:predicateObjectMap [
        rr:predicate rdf:value;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperatureAmb/value";
        ]
    ].