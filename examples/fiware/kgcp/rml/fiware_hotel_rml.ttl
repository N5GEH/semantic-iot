@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dogont: <http://elite.polito.it/ontologies/dogont.owl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .

# Mapping for Hotel
ex:MappingHotel
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="Hotel")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/Hotel/{id}" ;
        rr:class dogont:Building ;
    ] ;
    .

# Mapping for AmbientTemperatureSensor
ex:MappingAmbientTemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="AmbientTemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/AmbientTemperatureSensor/{id}" ;
        rr:class dogont:TemperatureSensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingtemperatureAmb_AmbientTemperatureSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for HotelRoom
ex:MappingHotelRoom
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="HotelRoom")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/HotelRoom/{id}" ;
        rr:class dogont:Room ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotel ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for TemperatureSensor
ex:MappingTemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="TemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/TemperatureSensor/{id}" ;
        rr:class dogont:SingleTemperatureSensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:Mappingtemperature_TemperatureSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for CO2Sensor
ex:MappingCO2Sensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="CO2Sensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/CO2Sensor/{id}" ;
        rr:class dogont:Co2Sensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:Mappingco2_CO2Sensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for PresenceSensor
ex:MappingPresenceSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="PresenceSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/PresenceSensor/{id}" ;
        rr:class dogont:PresenceSensor ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:Mappingpir_PresenceSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for FreshAirVentilation
ex:MappingFreshAirVentilation
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="FreshAirVentilation")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/FreshAirVentilation/{id}" ;
        rr:class dogont:Fan ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasFunctionality ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingairFlowSetpoint_FreshAirVentilation ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for RadiatorThermostat
ex:MappingRadiatorThermostat
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="RadiatorThermostat")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/RadiatorThermostat/{id}" ;
        rr:class dogont:Thermostat ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasFunctionality ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingtemperatureSetpoint_RadiatorThermostat ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for CoolingCoil
ex:MappingCoolingCoil
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="CoolingCoil")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/CoolingCoil/{id}" ;
        rr:class dogont:AirConditioningSystem ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:isIn ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingHotelRoom ;
            rr:joinCondition [
                rr:child "hasLocation.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasFunctionality ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingCoolingCoil ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    .

# Mapping for fanSpeed_CoolingCoil
ex:MappingfanSpeed_CoolingCoil
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="fanSpeed_CoolingCoil")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/fanSpeed_CoolingCoil/{id}" ;
        rr:class dogont:FanControlFunctionality ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{relatedTo.value}/attrs/fanSpeed/value" ;
        ] ;
    ] ;
    .

# Mapping for airFlowSetpoint_FreshAirVentilation
ex:MappingairFlowSetpoint_FreshAirVentilation
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="airFlowSetpoint_FreshAirVentilation")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/airFlowSetpoint_FreshAirVentilation/{id}" ;
        rr:class dogont:FanControlFunctionality ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasFunctionality ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingFreshAirVentilation ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{relatedTo.value}/attrs/airFlowSetpoint/value" ;
        ] ;
    ] ;
    .

# Mapping for temperatureSetpoint_RadiatorThermostat
ex:MappingtemperatureSetpoint_RadiatorThermostat
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="temperatureSetpoint_RadiatorThermostat")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/temperatureSetpoint_RadiatorThermostat/{id}" ;
        rr:class dogont:ThermostatControlFunctionality ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasFunctionality ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingRadiatorThermostat ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{relatedTo.value}/attrs/temperatureSetpoint/value" ;
        ] ;
    ] ;
    .

# Mapping for temperature_TemperatureSensor
ex:Mappingtemperature_TemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="temperature_TemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/temperature_TemperatureSensor/{id}" ;
        rr:class dogont:TemperatureState ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingTemperatureSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperature/value" ;
        ] ;
    ] ;
    .

# Mapping for co2_CO2Sensor
ex:Mappingco2_CO2Sensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="co2_CO2Sensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/co2_CO2Sensor/{id}" ;
        rr:class dogont:CO2MeasurementState ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingCO2Sensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/co2/value" ;
        ] ;
    ] ;
    .

# Mapping for pir_PresenceSensor
ex:Mappingpir_PresenceSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="pir_PresenceSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/pir_PresenceSensor/{id}" ;
        rr:class dogont:PresenceState ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingPresenceSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/pir/value" ;
        ] ;
    ] ;
    .

# Mapping for temperatureAmb_AmbientTemperatureSensor
ex:MappingtemperatureAmb_AmbientTemperatureSensor
    a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "placeholder.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator '$[?(@.type=="temperatureAmb_AmbientTemperatureSensor")]' ;
    ] ;
    rr:subjectMap [
        rr:template "http://example.com/temperatureAmb_AmbientTemperatureSensor/{id}" ;
        rr:class dogont:TemperatureState ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate dogont:hasState ;
        rr:objectMap [
            rr:parentTriplesMap ex:MappingAmbientTemperatureSensor ;
            rr:joinCondition [
                rr:child "relatedTo.value" ;
                rr:parent "id" ;
            ] ;
        ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [
            rr:template "https://fiware.eonerc.rwth-aachen.de/v2/entities/{id}/attrs/temperatureAmb/value" ;
        ] ;
    ] ;
    .
